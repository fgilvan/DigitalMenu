// <auto-generated />
using System;
using DigitalMenu.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DigitalMenu.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230918013019_AddCategory")]
    partial class AddCategory
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DigitalMenu.Core.Entities.Category.CategoryObj", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3c0cfa73-efc1-48e2-abc1-55e1e27e4eb5"),
                            Name = "Frutas"
                        });
                });

            modelBuilder.Entity("DigitalMenu.Core.Entities.Product.ProductObj", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("ed66f47f-15b3-463f-84b9-dc16976a4d2f"),
                            CategoryId = new Guid("3c0cfa73-efc1-48e2-abc1-55e1e27e4eb5"),
                            Description = "Banana boa",
                            Name = "Banana"
                        },
                        new
                        {
                            Id = new Guid("83d92fe2-cb25-4603-85e7-2910da489694"),
                            CategoryId = new Guid("3c0cfa73-efc1-48e2-abc1-55e1e27e4eb5"),
                            Description = "Limão melhor ainda",
                            Name = "Limão"
                        });
                });

            modelBuilder.Entity("DigitalMenu.Core.Entities.Product.ProductObj", b =>
                {
                    b.HasOne("DigitalMenu.Core.Entities.Category.CategoryObj", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("DigitalMenu.Core.Entities.Category.CategoryObj", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
